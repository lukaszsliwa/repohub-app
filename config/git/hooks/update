#!/bin/sh
#
# An example hook script to blocks unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#

repository="http://app.repohub.dev/repositories/%{repository}"

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero="0000000000000000000000000000000000000000"
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		curl --silent -X POST $repository/tags/$short_refname/callback -d username=$USER -d tag=unannotated &
		;;
	refs/tags/*,delete)
		# delete tag
		tag=$(git rev-parse --symbolic --abbrev-ref $refname)
		curl --silent -X DELETE $repository/tags/$tag/callback -d username=$USER -d tag=delete &
		;;
	refs/tags/*,tag)
		# annotated tag
		short_refname=${refname##refs/tags/}
		curl --silent -X POST $repository/tags/$short_refname/callback -d username=$USER -d tag=annotated &
		;;
	refs/heads/*,commit)
		# branch
		short_refname=${refname##refs/heads/}
		curl --silent -X POST $repository/branches/$short_refname/callback -d username=$USER -d branch=commit -d old=$oldrev -d new=$newrev
		curl --silent -X POST $repository/commits/$short_refname/callback -d username=$USER -d branch=commit -d old=$oldrev -d new=$newrev
		;;
	refs/heads/*,delete)
		# delete branch
		branch=$(git rev-parse --symbolic --abbrev-ref $refname)
		curl --silent -X DELETE $repository/branches/$branch/callback -d username=$USER -d branch=delete &
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0
